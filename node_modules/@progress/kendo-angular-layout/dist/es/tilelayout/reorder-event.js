/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { PreventableEvent } from './preventable-event';
/**
 * Arguments for the `reorder` event. The event fires when the order or starting
 * positions of the items is changed via the UI. If you prevent the event, the change is canceled ([see example]({% slug reordering_tilelayout %}#toc-handling-the-reorder-event)).
 */
var TileLayoutReorderEvent = /** @class */ (function (_super) {
    tslib_1.__extends(TileLayoutReorderEvent, _super);
    /**
     * Constructs the event arguments for the `reorder` event.
     * @param item - The TileLayoutItem being reordered.
     * @param items - The TileLayoutItem collection that holds the currently rendered items and their internal state.
     * @param newIndex - The new order index of the reordered item used to determine its positioning relative to the other items.
     * @param oldIndex - The initial order index of the reordered item used to determine its positioning relative to the other items.
     * @param newCol - The new start column of the reordered item.
     * @param oldCol - The initial start column of the reordered item.
     * @param newRow - The new start row of the reordered item.
     * @param oldRow - The initial start row of the reordered item.
     * @hidden
     */
    function TileLayoutReorderEvent(item, items, newIndex, oldIndex, newCol, oldCol, newRow, oldRow) {
        var _this = _super.call(this) || this;
        _this.item = item;
        _this.items = items;
        _this.newIndex = newIndex;
        _this.oldIndex = oldIndex;
        _this.newCol = newCol;
        _this.oldCol = oldCol;
        _this.newRow = newRow;
        _this.oldRow = oldRow;
        return _this;
    }
    return TileLayoutReorderEvent;
}(PreventableEvent));
export { TileLayoutReorderEvent };
