{"version":3,"file":"grid-layout.component.d.ts","sources":["grid-layout.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Renderer2, ElementRef, AfterViewInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { GridLayoutGapSettings, AlignSettings } from './models';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * Represents the [Kendo UI GridLayout component for Angular]({% slug overview_gridlayout %}).\n */\nexport declare class GridLayoutComponent implements AfterViewInit, OnChanges {\n    private renderer;\n    private element;\n    private localization;\n    hostClass: boolean;\n    readonly dir: string;\n    /**\n     * Specifies the number of rows and their height\n     * ([More details]({% slug layout_gridlayout %}#toc-rows-and-columns)).\n     *\n     * Accepts an array, which serves two purposes:\n     *\n     * The number of elements in the array defines the number of rows.\n     * Each array element defines the size of the corresponding row. The possible array values are:\n     * * `number` - Defines the size in pixels.\n     * * `string` - Enables the usage of arbitrary units e.g. `20%` or `auto`.\n     * * [GridLayoutRowSize]({% slug api_layout_gridlayoutrowsize %}) - Configuration object, which accepts a `height` key.\n     */\n    rows: Array<any>;\n    /**\n     * Specifies the number of columns and their widths\n     * ([More details]({% slug layout_gridlayout %}#toc-rows-and-columns)).\n     *\n     * Accepts an array, which serves two purposes:\n     *\n     * The number of elements in the array defines the number of columns.\n     * Each array element defines the size of the corresponding column. The possible array values are:\n     * * `number` - Defines the size in pixels.\n     * * `string` - Enables the usage of arbitrary units e.g. `20%` or `auto`.\n     * * [GridLayoutColSize]({% slug api_layout_gridlayoutcolsize %}) - Configuration object, which accepts a `width` key.\n     */\n    cols: Array<any>;\n    /**\n     * Specifies the gaps between the elements. The default value is `0`\n     * ([see example]({% slug layout_gridlayout %}#toc-gaps)).\n     */\n    gap: number | string | GridLayoutGapSettings;\n    /**\n     * Specifies the horizontal and vertical alignment of the inner GridLayout elements\n     * ([see example]({% slug layout_gridlayout %}#toc-alignment)).\n     */\n    align: AlignSettings;\n    private _align;\n    private justifyClass;\n    private alignClass;\n    constructor(renderer: Renderer2, element: ElementRef, localization: LocalizationService);\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private handleAlignClasses;\n    private setGap;\n    private handleGridTemplateStyling;\n    private readonly direction;\n}\n"]}