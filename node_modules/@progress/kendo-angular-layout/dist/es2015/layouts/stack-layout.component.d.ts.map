{"version":3,"file":"stack-layout.component.d.ts","sources":["stack-layout.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Renderer2, ElementRef, AfterViewInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { AlignSettings, Orientation } from './models';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * Represents the [Kendo UI StackLayout component for Angular]({% slug overview_stacklayout %}).\n */\nexport declare class StackLayoutComponent implements AfterViewInit, OnChanges {\n    private renderer;\n    private element;\n    private localization;\n    hostClass: boolean;\n    readonly horizontalClass: boolean;\n    readonly verticalClass: boolean;\n    readonly dir: string;\n    /**\n     * Specifies the horizontal and vertical alignment of the inner StackLayout elements\n     * ([see example]({% slug layout_stacklayout %}#toc-alignment)).\n     */\n    align: AlignSettings;\n    /**\n     * Specifies the gap between the inner StackLayout elements. The default value is `0`\n     * ([see example]({% slug layout_stacklayout %}#toc-gaps)).\n     */\n    gap: number | string;\n    /**\n     * Specifies the orientation of the StackLayout\n     * ([see example]({% slug layout_stacklayout %}#toc-orientation)).\n     *\n     * The possible values are:\n     * (Default) `horizontal`\n     * `vertical`\n     */\n    orientation: Orientation;\n    private _align;\n    private justifyClass;\n    private alignClass;\n    constructor(renderer: Renderer2, element: ElementRef, localization: LocalizationService);\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    private handleAlignClasses;\n    private setGap;\n    private readonly direction;\n}\n"]}