/**-----------------------------------------------------------------------------------------
* Copyright © 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgZone, Renderer2 } from '@angular/core';
import { BehaviorSubject, Subject } from 'rxjs';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { DraggingServiceConfig } from './models/dragging-config.interface';
import { TileLayoutReorderEvent } from './reorder-event';
import { TileLayoutResizeEvent } from './resize-event';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class TileLayoutDraggingService {
    private zone;
    private renderer;
    private localization;
    reorderable: BehaviorSubject<boolean>;
    resizable: BehaviorSubject<boolean>;
    reorder: Subject<TileLayoutReorderEvent>;
    resize: Subject<TileLayoutResizeEvent>;
    tileLayoutSettings: DraggingServiceConfig;
    readonly colStart: string;
    readonly rowStart: string;
    readonly itemWrapper: HTMLElement;
    readonly order: number;
    private draggedItem;
    private draggedItemWrapper;
    private reordering;
    private resizing;
    private offset;
    private targetSize;
    private cellSize;
    private targetOrder;
    private currentColStart;
    private currentRowStart;
    private startingPoint;
    private currentResizingColSpan;
    private currentResizingRowSpan;
    private direction;
    private lastDragCursorOffset;
    private localizationSubscription;
    private rtl;
    constructor(zone: NgZone, renderer: Renderer2, localization: LocalizationService);
    ngOnDestroy(): void;
    handlePress(originalEvent: any): void;
    handleDrag(originalEvent: any): void;
    handleRelease(originalEvent: any): void;
    private reorderItems;
    private resizeItem;
    private cleanUp;
    private targetSpan;
    private getTargetCol;
    private getTargetRow;
    private calculateHintHeight;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TileLayoutDraggingService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<TileLayoutDraggingService>;
}

//# sourceMappingURL=dragging-service.d.ts.map