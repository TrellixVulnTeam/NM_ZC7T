/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TabStripScrollButtonsVisibility } from "./scroll-buttons-visibility";
/**
 * The settings for the scrollable functionality of the TabStrip. ([see example]({% slug scrollable_tabstrip %}toc-scrollable-settings)).
 */
export interface TabStripScrollableSettings {
    /**
     * Determines whether the TabStrip will be scrollable.
     * @default true
     */
    enabled?: boolean;
    /**
     * Determines whether the TabStrip scroll buttons visibility mode. The possible options are:
     * - 'auto'(default) - The scroll buttons will be rendered only when the tabs list overflows its container.
     * - 'visible' - The scroll buttons will be always visible.
     * - 'hidden' - No scroll buttons will be rendered.
     */
    scrollButtons?: TabStripScrollButtonsVisibility;
    /**
     * Determines whether the TabStrip will be scrolled with the mouse wheel.
     * @default true
     */
    mouseScroll?: boolean;
    /**
     * Sets the tab list scroll speed in pixels when clicking the scroll buttons.
     * @default 100
     */
    buttonScrollSpeed?: number;
    /**
     * Sets the tab list scroll speed in pixels when scrolling via the mouse wheel.
     * @default 10
     */
    mouseScrollSpeed?: number;
    /**
     * Allows defining a custom CSS class, or multiple classes separated by spaces, which will be applied to the span element of the prev scroll button.
     *
     * Allows the usage of custom icons.
     */
    prevButtonIcon?: string;
    /**
     * Allows defining a custom CSS class, or multiple classes separated by spaces, which will be applied to the span element of the next scroll button.
     *
     * Allows the usage of custom icons.
     */
    nextButtonIcon?: string;
}
/**
 * @hidden
 */
export declare const normalizeScrollableSettings: (settings: any) => any;
