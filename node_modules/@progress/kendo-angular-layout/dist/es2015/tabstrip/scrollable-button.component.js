/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, ElementRef, HostBinding, Input, Renderer2, NgZone } from '@angular/core';
import { Subscription } from 'rxjs';
import { ScrollService } from './tabstrip-scroll.service';
import { HIDDEN_CLASS } from './constants';
/**
 * @hidden
 */
let TabStripScrollableButtonComponent = class TabStripScrollableButtonComponent {
    constructor(host, scrollService, renderer, ngZone) {
        this.host = host;
        this.scrollService = scrollService;
        this.renderer = renderer;
        this.ngZone = ngZone;
        this.btnClasses = true;
        this.prev = false;
        this._disabled = false;
        this.subs = new Subscription();
        this.clickHandler = (scrollEvent) => {
            const tabStripScrollEvent = this.scrollService.emitScrollEvent(scrollEvent);
            const isTabStripScrollEventPrevented = tabStripScrollEvent.isDefaultPrevented();
            if (isTabStripScrollEventPrevented) {
                return;
            }
            const buttonType = this.prev ? 'prev' : 'next';
            this.scrollService.scrollTabs(buttonType);
        };
        this.subs.add(this.scrollService.scrollButtonActiveStateChange.subscribe((activeButtonSettings) => {
            const applyActiveState = (this.prev && activeButtonSettings.buttonType === 'prev') ||
                (!this.prev && activeButtonSettings.buttonType === 'next');
            if (applyActiveState) {
                this.disabled = !activeButtonSettings.active;
            }
        }));
    }
    get prevClass() {
        return this.prev;
    }
    get nextClass() {
        return !this.prev;
    }
    get disabled() {
        return this._disabled;
    }
    get hostBoundingClientRect() {
        return this.host.nativeElement.getBoundingClientRect();
    }
    get iconClass() {
        return this.scrollService.scrollButtonIconClass[this.prev ? 'prevScrollButton' : 'nextScrollButton'];
    }
    set disabled(value) {
        this._disabled = value;
    }
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular(() => {
            this.subs.add(this.renderer.listen(this.host.nativeElement, 'click', this.clickHandler));
        });
    }
    ngOnDestroy() {
        this.subs.unsubscribe();
    }
    toggle(show) {
        this.renderer[show ? 'removeClass' : 'addClass'](this.host.nativeElement, HIDDEN_CLASS);
    }
};
tslib_1.__decorate([
    HostBinding('class.k-button'),
    HostBinding('class.k-button-md'),
    HostBinding('class.k-icon-button'),
    HostBinding('class.k-rounded-md'),
    HostBinding('class.k-button-flat'),
    HostBinding('class.k-button-flat-base'),
    tslib_1.__metadata("design:type", Boolean)
], TabStripScrollableButtonComponent.prototype, "btnClasses", void 0);
tslib_1.__decorate([
    HostBinding('class.k-tabstrip-prev'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], TabStripScrollableButtonComponent.prototype, "prevClass", null);
tslib_1.__decorate([
    HostBinding('class.k-tabstrip-next'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], TabStripScrollableButtonComponent.prototype, "nextClass", null);
tslib_1.__decorate([
    HostBinding('class.k-disabled'),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], TabStripScrollableButtonComponent.prototype, "disabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], TabStripScrollableButtonComponent.prototype, "prev", void 0);
TabStripScrollableButtonComponent = tslib_1.__decorate([
    Component({
        template: `
        <span class="k-icon k-button-icon" [ngClass]="iconClass"></span>
    `,
        selector: '[kendoTabStripScrollableButton]'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef,
        ScrollService,
        Renderer2,
        NgZone])
], TabStripScrollableButtonComponent);
export { TabStripScrollableButtonComponent };
