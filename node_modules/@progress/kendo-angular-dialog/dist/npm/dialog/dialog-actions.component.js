/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var util_1 = require("../common/util");
/**
 * Specifies the action buttons of the Dialog
 * ([see example]({% slug actionbuttons_dialog %})).
 */
var DialogActionsComponent = /** @class */ (function () {
    function DialogActionsComponent(el) {
        this.el = el;
        /**
         * Specifies the possible layout of the action buttons.
         */
        this.layout = 'stretched';
        /**
         * Fires when the user clicks an action button.
         */
        this.action = new core_1.EventEmitter();
        this.buttonGroupClassName = true;
    }
    Object.defineProperty(DialogActionsComponent.prototype, "className", {
        get: function () {
            return this.layout === 'stretched';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    DialogActionsComponent.prototype.actionTemplate = function () {
        return this.actions instanceof core_1.TemplateRef;
    };
    /**
     * @hidden
     */
    DialogActionsComponent.prototype.onButtonClick = function (action, _e) {
        this.action.emit(action);
    };
    /**
     * @hidden
     */
    DialogActionsComponent.prototype.buttonClass = function (action) {
        var classes = ['k-button k-button-md k-rounded-md'];
        var fillMode = action.fillMode ? action.fillMode : 'solid';
        var themeColor = action.themeColor ? action.themeColor : 'base';
        var cssClasses = action.cssClass ? util_1.parseCSSClassNames(action.cssClass) : [];
        classes.push("k-button-" + fillMode + " k-button-" + fillMode + "-" + themeColor);
        if (cssClasses.length > 0) {
            classes = classes.concat(cssClasses);
        }
        return classes.join(' ');
    };
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], DialogActionsComponent.prototype, "actions", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], DialogActionsComponent.prototype, "layout", void 0);
    tslib_1.__decorate([
        core_1.Output(),
        tslib_1.__metadata("design:type", core_1.EventEmitter)
    ], DialogActionsComponent.prototype, "action", void 0);
    tslib_1.__decorate([
        core_1.HostBinding('class.k-dialog-buttongroup'),
        core_1.HostBinding('class.k-actions'),
        tslib_1.__metadata("design:type", Boolean)
    ], DialogActionsComponent.prototype, "buttonGroupClassName", void 0);
    tslib_1.__decorate([
        core_1.HostBinding('class.k-actions-stretched'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], DialogActionsComponent.prototype, "className", null);
    DialogActionsComponent = tslib_1.__decorate([
        core_1.Component({
            selector: 'kendo-dialog-actions',
            template: "\n        <ng-content *ngIf=\"!actions\"></ng-content>\n        <ng-container *ngIf=\"!actionTemplate()\">\n            <button\n                type=\"button\"\n                [ngClass]=\"buttonClass(action)\"\n                (click)=\"onButtonClick(action, $event)\"\n                *ngFor=\"let action of actions\"\n                [attr.aria-label]=\"action.text\"\n            >\n                {{ action.text }}\n            </button>\n        </ng-container>\n        <ng-template [ngTemplateOutlet]=\"actions\" *ngIf=\"actionTemplate()\"></ng-template>\n    "
        }),
        tslib_1.__metadata("design:paramtypes", [core_1.ElementRef])
    ], DialogActionsComponent);
    return DialogActionsComponent;
}());
exports.DialogActionsComponent = DialogActionsComponent;
