{"version":3,"file":"chip.component.d.ts","sources":["chip.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, ElementRef, Renderer2, AfterViewInit, OnInit, NgZone } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { ChipRemoveEvent } from './chip-remove-event-args.interface';\nimport { ChipContentClickEvent } from './chip-content-click-event-args.interface';\nimport { ChipFillMode, ChipRounded, ChipSize, ChipThemeColor } from '../common/models';\n/**\n * Displays a Chip that represents an input, attribute or an action.\n */\nexport declare class ChipComponent implements OnInit, AfterViewInit {\n    element: ElementRef;\n    private renderer;\n    private ngZone;\n    private localizationService;\n    /**\n     * Sets the label text of the Chip.\n     */\n    label: string;\n    /**\n     * Defines the name for an existing icon in a Kendo UI theme.\n     * The icon is rendered inside the Chip by a `span.k-icon` element.\n     */\n    icon: string;\n    /**\n     * Defines a CSS class — or multiple classes separated by spaces —\n     * which are applied to a span element.\n     * Allows the usage of custom icons.\n     */\n    iconClass: string;\n    /**\n     * The avatarClass allows the usage of avatar icons rendered in the Chip.\n     */\n    avatarClass: string;\n    /**\n     * Specifies the selected state of the Chip.\n     * @default false\n     */\n    selected: boolean;\n    /**\n     * Specifies if the Chip will be removable or not.\n     * If the property is set to `true`, the Chip renders a remove icon.\n     * @default false\n     */\n    removable: boolean;\n    /**\n     * Specifies a custom remove icon that will be rendered when the Chip is removable.\n     * [see example]({% slug icons %})\n     */\n    removeIcon: string;\n    /**\n     * If set to `true`, the Chip will be disabled.\n     * @default false\n     */\n    disabled: boolean;\n    /**\n     * The size property specifies the padding of the Chip\n     * ([see example]({% slug appearance_chip %}#toc-size)).\n     *\n     * The possible values are:\n     * * `'small'`\n     * * `'medium'` (default)\n     * * `'large'`\n     * * `null`\n     */\n    size: ChipSize;\n    /**\n     * The rounded property specifies the border radius of the Chip\n     * ([see example]({% slug appearance_chip %}#toc-rounded)).\n     *\n     * The possible values are:\n     * * `'small'`\n     * * `'medium'` (default)\n     * * `'large'`\n     * * `'full'`\n     * * `null`\n     */\n    rounded: ChipRounded;\n    /**\n     * The fillMode property specifies the background and border styles of the Chip\n     * ([see example]({% slug appearance_chip %}#toc-fillMode)).\n     *\n     * The possible values are:\n     * * `'solid'` (default)\n     * * `'outline'`\n     * * `null`\n     */\n    fillMode: ChipFillMode;\n    /**\n     * The Chip allows you to specify predefined theme colors.\n     * The theme color will be applied as a background and border color while also amending the text color accordingly\n     * ([see example]({% slug appearance_chip %}#toc-themeColor)).\n     *\n     * The possible values are:\n     * * `'base'` (default)\n     * * `'info'`\n     * * `'success'`\n     * * `'warning'`\n     * * `'error'`\n     * * `null`\n     */\n    themeColor: ChipThemeColor;\n    /**\n     * Fires each time the user clicks the remove icon of the Chip.\n     */\n    remove: EventEmitter<ChipRemoveEvent>;\n    /**\n     * Fires each time the user clicks the content of the Chip.\n     */\n    contentClick: EventEmitter<ChipContentClickEvent>;\n    tabIndex: number;\n    readonly ariaChecked: boolean;\n    hostClass: boolean;\n    readonly hasIconClass: boolean;\n    readonly disabledClass: boolean;\n    readonly selectedClass: boolean;\n    readonly focusedClass: boolean;\n    /**\n     * @hidden\n     */\n    direction: string;\n    private _size;\n    private _rounded;\n    private _fillMode;\n    private _themeColor;\n    private focused;\n    private dynamicRTLSubscription;\n    private detachDomEvents;\n    constructor(element: ElementRef, renderer: Renderer2, ngZone: NgZone, localizationService: LocalizationService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    /**\n     * @hidden\n     */\n    readonly kendoIconClass: string;\n    /**\n     * @hidden\n     */\n    readonly customIconClass: string;\n    /**\n     * @hidden\n     */\n    readonly chipAvatarClass: string;\n    /**\n     * @hidden\n     */\n    readonly removeIconClass: string;\n    /**\n     * Focuses the Chip component.\n     */\n    focus(): void;\n    /**\n     * Blurs the Chip component.\n     */\n    blur(): void;\n    /**\n     * @hidden\n     */\n    onRemoveClick(e: any): void;\n    private attachElementEventHandlers;\n    /**\n     * @hidden\n     */\n    private verifyIconSettings;\n    private handleClasses;\n    private handleThemeColor;\n}\n"]}