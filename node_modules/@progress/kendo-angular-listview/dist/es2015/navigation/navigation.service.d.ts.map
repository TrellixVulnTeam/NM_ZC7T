{"version":3,"file":"navigation.service.d.ts","sources":["navigation.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Subject } from 'rxjs';\n/**\n * @hidden\n *\n * Provided per ListView instance. Keeps the availability, active index and focused state of the current ListView.\n * Emits `changes` when any of the aforementioned states changes.\n */\nexport declare class NavigationService {\n    /**\n     * Emits every time a change in active index/focus/blur/navigation availability occurs.\n     */\n    changes: Subject<any>;\n    /**\n     * Sets or gets if the navigation is enabled.\n     * When no activeIndex is present, the navigation is inferred as disabled.\n     * Toggling the service availability clears the current active index or activates the first one.\n     */\n    isEnabled: boolean;\n    /**\n     * Specifies if a ListView item currently holds focus.\n     */\n    isFocused: boolean;\n    /**\n     * Keeps track of the index of the items that should be the current focus target (tabindex=\"0\").\n     * When set to `null`/`undefined`, the navigation is disabled and the items should not render a tabindex.\n     */\n    activeIndex: number;\n    /**\n     * Shows if the checked index should be the current available focus target (tabindex=\"0\").\n     */\n    isActive(index: number): boolean;\n    handleKeyDown(event: KeyboardEvent, totalItemsCount: number): void;\n    handleFocusIn(event: FocusEvent): void;\n    handleFocusOut(event: FocusEvent): void;\n    /**\n     * Sets the `activeIndex` and triggers changes without focusing the corresponding ListView item.\n     */\n    setActiveIndex(index: number): void;\n    /**\n     * Focuses item at the targeted index. If no index is passed, the current `activeIndex` is used.\n     * The passed target index is normalized to fit the min/max available indices bounds.\n     */\n    focusIndex(index: any, totalItemsCount: number): void;\n    private navigateTo;\n    private navigateToPrevious;\n    private navigateToNext;\n}\n"]}