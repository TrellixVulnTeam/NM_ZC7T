/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Directive, Input } from '@angular/core';
import { Subscription } from 'rxjs';
import { ListViewComponent } from '../listview.component';
/**
 * A directive that encapsulates the in-memory handling of paging
 * ([see example]({% slug paging_listview %}#toc-binding-directive)).
 */
let DataBindingDirective = class DataBindingDirective {
    constructor(listView) {
        this.listView = listView;
        this.subscriptions = new Subscription();
    }
    /**
     * The array of data which will be used to populate the ListView.
     */
    set data(data) {
        this._data = data || [];
        this.updateListViewData();
    }
    get data() {
        return this._data;
    }
    ngOnInit() {
        this.subscriptions.add(this.listView.pageChange.subscribe(this.handlePageChange.bind(this)));
        this.subscriptions.add(this.listView.pageSizeChange.subscribe(this.handlePageSizeChange.bind(this)));
        this.updateListViewData();
    }
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
    }
    handlePageChange(event) {
        this.listView.skip = event.skip;
        this.listView.pageSize = event.take;
        this.updateListViewData();
    }
    handlePageSizeChange(event) {
        this.listView.pageSize = Number(event.newPageSize);
    }
    updateListViewData() {
        const from = this.listView.skip || 0;
        const to = from + (this.listView.pageSize || this.data.length);
        this.listView.data = {
            data: this.data.slice(from, to),
            total: this.data.length
        };
    }
};
tslib_1.__decorate([
    Input('kendoListViewBinding'),
    tslib_1.__metadata("design:type", Array),
    tslib_1.__metadata("design:paramtypes", [Array])
], DataBindingDirective.prototype, "data", null);
DataBindingDirective = tslib_1.__decorate([
    Directive({
        selector: '[kendoListViewBinding]'
    }),
    tslib_1.__metadata("design:paramtypes", [ListViewComponent])
], DataBindingDirective);
export { DataBindingDirective };
