/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Directive, Input } from '@angular/core';
import { Subscription } from 'rxjs';
import { ListViewComponent } from '../listview.component';
/**
 * A directive that encapsulates the in-memory handling of paging
 * ([see example]({% slug paging_listview %}#toc-binding-directive)).
 */
var DataBindingDirective = /** @class */ (function () {
    function DataBindingDirective(listView) {
        this.listView = listView;
        this.subscriptions = new Subscription();
    }
    Object.defineProperty(DataBindingDirective.prototype, "data", {
        get: function () {
            return this._data;
        },
        /**
         * The array of data which will be used to populate the ListView.
         */
        set: function (data) {
            this._data = data || [];
            this.updateListViewData();
        },
        enumerable: true,
        configurable: true
    });
    DataBindingDirective.prototype.ngOnInit = function () {
        this.subscriptions.add(this.listView.pageChange.subscribe(this.handlePageChange.bind(this)));
        this.subscriptions.add(this.listView.pageSizeChange.subscribe(this.handlePageSizeChange.bind(this)));
        this.updateListViewData();
    };
    DataBindingDirective.prototype.ngOnDestroy = function () {
        this.subscriptions.unsubscribe();
    };
    DataBindingDirective.prototype.handlePageChange = function (event) {
        this.listView.skip = event.skip;
        this.listView.pageSize = event.take;
        this.updateListViewData();
    };
    DataBindingDirective.prototype.handlePageSizeChange = function (event) {
        this.listView.pageSize = Number(event.newPageSize);
    };
    DataBindingDirective.prototype.updateListViewData = function () {
        var from = this.listView.skip || 0;
        var to = from + (this.listView.pageSize || this.data.length);
        this.listView.data = {
            data: this.data.slice(from, to),
            total: this.data.length
        };
    };
    tslib_1.__decorate([
        Input('kendoListViewBinding'),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], DataBindingDirective.prototype, "data", null);
    DataBindingDirective = tslib_1.__decorate([
        Directive({
            selector: '[kendoListViewBinding]'
        }),
        tslib_1.__metadata("design:paramtypes", [ListViewComponent])
    ], DataBindingDirective);
    return DataBindingDirective;
}());
export { DataBindingDirective };
