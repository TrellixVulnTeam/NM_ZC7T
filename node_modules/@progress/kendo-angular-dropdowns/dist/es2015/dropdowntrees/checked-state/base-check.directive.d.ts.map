{"version":3,"file":"base-check.directive.d.ts","sources":["base-check.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { TreeItem } from '@progress/kendo-angular-treeview';\nimport { CheckedItem } from './checked-item';\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\nexport declare abstract class BaseCheckDirective {\n    /**\n     * The item key/keys by which the data items will be compared.\n     */\n    abstract valueField: string | string[];\n    /**\n     * Defines the collection that will store the full checked items.\n     */\n    abstract checkedItems: CheckedItem[];\n    /**\n     * Holds a Set with just the checked item keys.\n     *\n     * Should be updated each time the `checkedItems` value or content is changed.\n     * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n     */\n    abstract checkedKeys: Set<any>;\n    protected addItem(item: TreeItem): void;\n    protected removeItem(item: TreeItem): void;\n    protected isItemChecked(item: CheckedItem): boolean;\n    protected updateItems(): void;\n    /**\n     * Adds the item's depth to the item's value to allow duplicate values on different levels.\n     *\n     * @param item - The checked key.\n     * @returns { string } - A string key consisting of the item's `valueField` value and its depth.\n     */\n    private getKey;\n}\n"]}