{"version":3,"file":"check-all.directive.d.ts","sources":["check-all.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';\nimport { TreeViewComponent } from '@progress/kendo-angular-treeview';\nimport { BaseCheckDirective } from './base-check.directive';\nimport { CheckedItem } from './checked-item';\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\nexport declare class CheckAllDirective extends BaseCheckDirective implements OnChanges, OnInit {\n    private element;\n    private zone;\n    cdr: ChangeDetectorRef;\n    renderer: Renderer2;\n    lastAction: 'check' | 'uncheck';\n    treeview: TreeViewComponent;\n    /**\n     * Defines the collection that will store the full checked items.\n     */\n    checkedItems: CheckedItem[];\n    /**\n     * The item key/keys by which the data items will be compared.\n     */\n    valueField: string | string[];\n    focused: boolean;\n    /**\n     * Fires when the `checkedItems` collection was updated.\n     */\n    checkedItemsChange: EventEmitter<CheckedItem[]>;\n    /**\n     * Holds a Set with just the checked item keys.\n     *\n     * Should be updated each time the `checkedItems` value or content is changed.\n     * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n     */\n    checkedKeys: Set<any>;\n    private currentCheckedState;\n    private currentIndeterminateState;\n    handleChange(event: any): void;\n    readonly isIndeterminate: boolean;\n    readonly isChecked: boolean;\n    constructor(element: ElementRef, zone: NgZone, cdr: ChangeDetectorRef, renderer: Renderer2);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    private nextTick;\n    private checkNode;\n    private allChecked;\n    private someChecked;\n}\n"]}