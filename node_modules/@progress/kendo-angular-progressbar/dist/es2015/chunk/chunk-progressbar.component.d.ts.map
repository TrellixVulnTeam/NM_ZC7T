{"version":3,"file":"chunk-progressbar.component.d.ts","sources":["chunk-progressbar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ProgressBarBase } from '../common/progressbar-base';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * Represents the [Kendo UI ChunkProgressBar component for Angular]({% slug overview_chunkprogressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-chunkprogressbar [value]=\"value\">\n *        </kendo-chunkprogressbar>\n *    `\n * })\n * class AppComponent {\n *     public value = 40;\n * }\n * ```\n */\nexport declare class ChunkProgressBarComponent extends ProgressBarBase {\n    localization: LocalizationService;\n    /**\n     * Sets the number of chunks into which the ChunkProgressBar will be split.\n     * Defaults to `5`.\n     */\n    chunkCount: number;\n    /**\n     * @hidden\n     */\n    readonly chunks: boolean[];\n    /**\n     * The CSS styles that will be rendered on the full chunk elements ([see example]({% slug chunkprogressbar_appearance %})).\n     * Supports the type of values that are supported by [`ngStyle`]({{ site.data.urls.angular['ngstyleapi'] }}).\n     */\n    progressCssStyle: {\n        [key: string]: string;\n    };\n    /**\n     * The CSS classes that will be rendered on the full chunk elements ([see example]({% slug chunkprogressbar_appearance %})).\n     * Supports the type of values that are supported by [`ngClass`]({{ site.data.urls.angular['ngclassapi'] }}).\n     */\n    progressCssClass: string | string[] | Set<string> | {\n        [key: string]: any;\n    };\n    /**\n     * The CSS styles that will be rendered on the empty chunk elements ([see example]({% slug chunkprogressbar_appearance %})).\n     * Supports the type of values that are supported by [`ngStyle`]({{ site.data.urls.angular['ngstyleapi'] }}).\n     */\n    emptyCssStyle: {\n        [key: string]: string;\n    };\n    /**\n     * The CSS classes that will be rendered on the empty chunk elements ([see example]({% slug chunkprogressbar_appearance %})).\n     * Supports the type of values that are supported by [`ngClass`]({{ site.data.urls.angular['ngclassapi'] }}).\n     */\n    emptyCssClass: string | string[] | Set<string> | {\n        [key: string]: any;\n    };\n    /**\n     * @hidden\n     */\n    readonly chunkSizePercentage: number;\n    /**\n     * @hidden\n     */\n    readonly orientationStyles: any;\n    private _orientationStyles;\n    /**\n     * @hidden\n     */\n    constructor(localization: LocalizationService);\n}\n"]}