/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, ChangeDetectorRef, ChangeDetectionStrategy, HostBinding, Input, ViewChild } from '@angular/core';
import { PagerElementComponent } from './pager-element.component';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { PagerContextService } from "./pager-context.service";
import { PageSizeChangeEvent } from './pagesizechange-event';
import { DropDownListComponent } from '@progress/kendo-angular-dropdowns';
/**
 * Displays a drop-down list for the page size selection ([see example]({% slug pager_settings %})).
 */
let PagerPageSizesComponent = class PagerPageSizesComponent extends PagerElementComponent {
    constructor(localization, cd, pagerContext) {
        super(localization, pagerContext, cd);
        this.pagerContext = pagerContext;
        this._pageSizes = [];
    }
    get pageSizes() {
        return this._pageSizes;
    }
    /**
     * The page sizes collection. Can contain numbers and [PageSizeItem]({% slug api_pager_pagesizeitem %}) objects.
     *
     * @example
     * {% meta height:400 %}
     * ```ts-preview
     * _@Component({
     *    selector: 'my-app',
     *    template: `
     *        <div *ngFor="let item of pagedData" style="border: 1px solid black; padding: 10px;">
     *            <span>{{item.ProductID}}. </span>
     *            <span>{{item.ProductName}}</span>
     *        </div>
     *        <kendo-datapager
     *             [skip]="skip"
     *             [pageSize]="pageSize"
     *             [total]="total"
     *             (pageChange)="onPageChange($event)">
     *           <ng-template kendoDataPagerTemplate>
     *               <kendo-datapager-page-sizes [pageSizes]="pagesizes"></kendo-datapager-page-sizes>
     *           </ng-template>
     *        </kendo-datapager>
     *    `
     * })
     * class AppComponent {
     *    public data: any[] = products;
     *    public pagedData = [];
     *    public skip = 0;
     *    public pageSize = 2;
     *    public total = products.length;
     *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];
     *
     *    public ngOnInit() {
     *        this.pageData();
     *    }
     *
     *    public onPageChange(e) {
     *        this.skip = e.skip;
     *        this.pageSize = e.take;
     *        this.pageData();
     *    }
     *
     *    private pageData() {
     *        this.pagedData = this.data.slice(this.skip, this.skip + this.pageSize);
     *    }
     * }
     *
     * const products = [{
     *   'ProductID' : 1,
     *   'ProductName' : "Chai",
     *   'SupplierID' : 1,
     *   'CategoryID' : 1,
     *   'QuantityPerUnit' : "10 boxes x 20 bags",
     *   'UnitPrice' : 18.0000,
     *   'UnitsInStock' : 39,
     *   'UnitsOnOrder' : 0,
     *   'ReorderLevel' : 10,
     *   'Discontinued' : false
     *
     * }, {
     *   'ProductID' : 2,
     *   'ProductName' : "Chang",
     *   'SupplierID' : 1,
     *   'CategoryID' : 1,
     *   'QuantityPerUnit' : "24 - 12 oz bottles",
     *   'UnitPrice' : 19.0000,
     *   'UnitsInStock' : 17,
     *   'UnitsOnOrder' : 40,
     *   'ReorderLevel' : 25,
     *   'Discontinued' : false
     * }, {
     *   'ProductID' : 3,
     *   'ProductName' : "Aniseed Syrup",
     *   'SupplierID' : 1,
     *   'CategoryID' : 2,
     *   'QuantityPerUnit' : "12 - 550 ml bottles",
     *   'UnitPrice' : 10.0000,
     *   'UnitsInStock' : 13,
     *   'UnitsOnOrder' : 70,
     *   'ReorderLevel' : 25,
     *   'Discontinued' : false
     * }, {
     *   'ProductID' : 4,
     *   'ProductName' : "Chef Anton\'s Cajun Seasoning",
     *   'SupplierID' : 2,
     *  'CategoryID' : 2,
     *   'QuantityPerUnit' : "48 - 6 oz jars",
     *   'UnitPrice' : 22.0000,
     *   'UnitsInStock' : 53,
     *   'UnitsOnOrder' : 0,
     *   'ReorderLevel' : 0,
     *   'Discontinued' : false
     * }, {
     *   'ProductID' : 5,
     *   'ProductName' : "Chef Anton\'s Gumbo Mix",
     *   'SupplierID' : 2,
     *   'CategoryID' : 2,
     *   'QuantityPerUnit' : "36 boxes",
     *   'UnitPrice' : 21.3500,
     *   'UnitsInStock' : 0,
     *   'UnitsOnOrder' : 0,
     *   'ReorderLevel' : 0,
     *   'Discontinued' : true
     * }, {
     *   'ProductID' : 6,
     *   'ProductName' : "Grandma\'s Boysenberry Spread",
     *   'SupplierID' : 3,
     *   'CategoryID' : 2,
     *   'QuantityPerUnit' : "12 - 8 oz jars",
     *   'UnitPrice' : 25.0000,
     *   'UnitsInStock' : 120,
     *   'UnitsOnOrder' : 0,
     *   'ReorderLevel' : 25,
     *   'Discontinued' : false
     * }];
     * ```
     * {% endmeta %}
     */
    set pageSizes(pageSizes) {
        let normalizedItems = [];
        pageSizes.forEach(item => {
            if (typeof item === 'number') {
                normalizedItems.push({
                    text: item.toString(),
                    value: item
                });
            }
            else {
                normalizedItems.push(item);
            }
        });
        if (this.pageSize && !normalizedItems.some(item => item.value === this.pageSize)) {
            normalizedItems = [{ text: this.pageSize.toString(), value: this.pageSize }, ...normalizedItems];
        }
        this._pageSizes = normalizedItems;
    }
    /**
     * @hidden
     *
     * @readonly
     */
    get classes() {
        return true;
    }
    ngAfterViewInit() {
        this.dropDownList.wrapper.nativeElement.setAttribute('aria-label', this.textFor('itemsPerPage'));
    }
    /**
     * @hidden
     */
    pageSizeChange(value, dropdownlist) {
        const event = new PageSizeChangeEvent(value);
        this.pagerContext.changePageSize(event);
        if (event.isDefaultPrevented()) {
            dropdownlist.writeValue(this.pageSize);
        }
    }
    onChanges({ total, skip, pageSize }) {
        this.total = total;
        this.skip = skip;
        this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;
        this.cd.markForCheck();
    }
};
tslib_1.__decorate([
    ViewChild('dropdownlist', { static: true }),
    tslib_1.__metadata("design:type", DropDownListComponent)
], PagerPageSizesComponent.prototype, "dropDownList", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array),
    tslib_1.__metadata("design:paramtypes", [Array])
], PagerPageSizesComponent.prototype, "pageSizes", null);
tslib_1.__decorate([
    HostBinding("class.k-pager-sizes"),
    HostBinding("class.k-label"),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], PagerPageSizesComponent.prototype, "classes", null);
PagerPageSizesComponent = tslib_1.__decorate([
    Component({
        changeDetection: ChangeDetectionStrategy.OnPush,
        selector: 'kendo-datapager-page-sizes',
        template: `
        <kendo-dropdownlist
            #dropdownlist
            [data]="pageSizes"
            textField="text"
            valueField="value"
            [valuePrimitive]="true"
            [value]="pageSize"
            (valueChange)="pageSizeChange($event, dropdownlist)"></kendo-dropdownlist>
        {{ textFor('itemsPerPage') }}
    `
    }),
    tslib_1.__metadata("design:paramtypes", [LocalizationService,
        ChangeDetectorRef,
        PagerContextService])
], PagerPageSizesComponent);
export { PagerPageSizesComponent };
