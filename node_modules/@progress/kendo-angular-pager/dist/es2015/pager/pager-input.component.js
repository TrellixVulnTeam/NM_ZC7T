/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { NumericTextBoxComponent } from '@progress/kendo-angular-inputs';
// tslint:disable:no-access-missing-member
import { Component, ChangeDetectorRef, ViewChild, NgZone } from '@angular/core';
import { PagerElementComponent } from './pager-element.component';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { PagerContextService } from "./pager-context.service";
import { Keys } from '@progress/kendo-angular-common';
/**
 * Displays an input element which allows the typing and rendering of page numbers.
 */
let PagerInputComponent = class PagerInputComponent extends PagerElementComponent {
    constructor(localization, pagerContext, zone, cd) {
        super(localization, pagerContext, cd);
        this.pagerContext = pagerContext;
        this.zone = zone;
        /**
         * @hidden
         *
         * @param {string} value
         *
         * @memberOf PagerInputComponent
         */
        this.handleKeyDown = (event) => {
            let incomingValue = this.numericInput.value || this.current;
            // tslint:disable:deprecation
            if (event.keyCode === Keys.Enter) {
                event.preventDefault();
                if (incomingValue !== this.current) {
                    this.zone.run(() => {
                        this.changePage(incomingValue - 1);
                    });
                }
            }
        };
        /**
         * @hidden
         *
         * @param {string} value
         *
         * @memberOf PagerInputComponent
         */
        this.handleBlur = () => {
            const inputValue = this.numericInput.value;
            if (!inputValue) {
                this.numericInput.writeValue(this.current);
                return;
            }
            if (inputValue !== this.current) {
                this.zone.run(() => {
                    this.changePage(inputValue - 1);
                });
            }
        };
    }
    /**
     * @hidden
     */
    get current() {
        return this.hasPages ? this.currentPage : 0;
    }
    /**
     * @hidden
     */
    get hasPages() {
        return this.totalPages !== 0;
    }
    onChanges({ total, skip, pageSize }) {
        this.total = total;
        this.skip = skip;
        this.pageSize = pageSize;
        this.cd.markForCheck();
    }
};
tslib_1.__decorate([
    ViewChild(NumericTextBoxComponent, { static: true }),
    tslib_1.__metadata("design:type", NumericTextBoxComponent)
], PagerInputComponent.prototype, "numericInput", void 0);
PagerInputComponent = tslib_1.__decorate([
    Component({
        selector: 'kendo-datapager-input',
        template: `
     <span [ngClass]="{'k-pager-input': true, 'k-label': true}">
        {{textFor('page')}}
        <kendo-numerictextbox
            [spinners]="false"
            [decimals]="0"
            format="n0"
            [disabled]="!hasPages"
            [value]="current"
            [min]="hasPages ? 1 : 0"
            [max]="totalPages"
            [autoCorrect]="true"
            [title]="textFor('pageNumberInputTitle')"
            [kendoEventsOutsideAngular]="{
                keydown: handleKeyDown,
                focusout: handleBlur
            }">
        </kendo-numerictextbox>
        {{textFor('of')}} {{totalPages}}
     </span>
    `
    }),
    tslib_1.__metadata("design:paramtypes", [LocalizationService,
        PagerContextService,
        NgZone,
        ChangeDetectorRef])
], PagerInputComponent);
export { PagerInputComponent };
