/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var pager_element_component_1 = require("./pager-element.component");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
var pager_context_service_1 = require("./pager-context.service");
var pagesizechange_event_1 = require("./pagesizechange-event");
var kendo_angular_dropdowns_1 = require("@progress/kendo-angular-dropdowns");
/**
 * Displays a drop-down list for the page size selection ([see example]({% slug pager_settings %})).
 */
var PagerPageSizesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PagerPageSizesComponent, _super);
    function PagerPageSizesComponent(localization, cd, pagerContext) {
        var _this = _super.call(this, localization, pagerContext, cd) || this;
        _this.pagerContext = pagerContext;
        _this._pageSizes = [];
        return _this;
    }
    Object.defineProperty(PagerPageSizesComponent.prototype, "pageSizes", {
        get: function () {
            return this._pageSizes;
        },
        /**
         * The page sizes collection. Can contain numbers and [PageSizeItem]({% slug api_pager_pagesizeitem %}) objects.
         *
         * @example
         * {% meta height:400 %}
         * ```ts-preview
         * _@Component({
         *    selector: 'my-app',
         *    template: `
         *        <div *ngFor="let item of pagedData" style="border: 1px solid black; padding: 10px;">
         *            <span>{{item.ProductID}}. </span>
         *            <span>{{item.ProductName}}</span>
         *        </div>
         *        <kendo-datapager
         *             [skip]="skip"
         *             [pageSize]="pageSize"
         *             [total]="total"
         *             (pageChange)="onPageChange($event)">
         *           <ng-template kendoDataPagerTemplate>
         *               <kendo-datapager-page-sizes [pageSizes]="pagesizes"></kendo-datapager-page-sizes>
         *           </ng-template>
         *        </kendo-datapager>
         *    `
         * })
         * class AppComponent {
         *    public data: any[] = products;
         *    public pagedData = [];
         *    public skip = 0;
         *    public pageSize = 2;
         *    public total = products.length;
         *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];
         *
         *    public ngOnInit() {
         *        this.pageData();
         *    }
         *
         *    public onPageChange(e) {
         *        this.skip = e.skip;
         *        this.pageSize = e.take;
         *        this.pageData();
         *    }
         *
         *    private pageData() {
         *        this.pagedData = this.data.slice(this.skip, this.skip + this.pageSize);
         *    }
         * }
         *
         * const products = [{
         *   'ProductID' : 1,
         *   'ProductName' : "Chai",
         *   'SupplierID' : 1,
         *   'CategoryID' : 1,
         *   'QuantityPerUnit' : "10 boxes x 20 bags",
         *   'UnitPrice' : 18.0000,
         *   'UnitsInStock' : 39,
         *   'UnitsOnOrder' : 0,
         *   'ReorderLevel' : 10,
         *   'Discontinued' : false
         *
         * }, {
         *   'ProductID' : 2,
         *   'ProductName' : "Chang",
         *   'SupplierID' : 1,
         *   'CategoryID' : 1,
         *   'QuantityPerUnit' : "24 - 12 oz bottles",
         *   'UnitPrice' : 19.0000,
         *   'UnitsInStock' : 17,
         *   'UnitsOnOrder' : 40,
         *   'ReorderLevel' : 25,
         *   'Discontinued' : false
         * }, {
         *   'ProductID' : 3,
         *   'ProductName' : "Aniseed Syrup",
         *   'SupplierID' : 1,
         *   'CategoryID' : 2,
         *   'QuantityPerUnit' : "12 - 550 ml bottles",
         *   'UnitPrice' : 10.0000,
         *   'UnitsInStock' : 13,
         *   'UnitsOnOrder' : 70,
         *   'ReorderLevel' : 25,
         *   'Discontinued' : false
         * }, {
         *   'ProductID' : 4,
         *   'ProductName' : "Chef Anton\'s Cajun Seasoning",
         *   'SupplierID' : 2,
         *  'CategoryID' : 2,
         *   'QuantityPerUnit' : "48 - 6 oz jars",
         *   'UnitPrice' : 22.0000,
         *   'UnitsInStock' : 53,
         *   'UnitsOnOrder' : 0,
         *   'ReorderLevel' : 0,
         *   'Discontinued' : false
         * }, {
         *   'ProductID' : 5,
         *   'ProductName' : "Chef Anton\'s Gumbo Mix",
         *   'SupplierID' : 2,
         *   'CategoryID' : 2,
         *   'QuantityPerUnit' : "36 boxes",
         *   'UnitPrice' : 21.3500,
         *   'UnitsInStock' : 0,
         *   'UnitsOnOrder' : 0,
         *   'ReorderLevel' : 0,
         *   'Discontinued' : true
         * }, {
         *   'ProductID' : 6,
         *   'ProductName' : "Grandma\'s Boysenberry Spread",
         *   'SupplierID' : 3,
         *   'CategoryID' : 2,
         *   'QuantityPerUnit' : "12 - 8 oz jars",
         *   'UnitPrice' : 25.0000,
         *   'UnitsInStock' : 120,
         *   'UnitsOnOrder' : 0,
         *   'ReorderLevel' : 25,
         *   'Discontinued' : false
         * }];
         * ```
         * {% endmeta %}
         */
        set: function (pageSizes) {
            var _this = this;
            var normalizedItems = [];
            pageSizes.forEach(function (item) {
                if (typeof item === 'number') {
                    normalizedItems.push({
                        text: item.toString(),
                        value: item
                    });
                }
                else {
                    normalizedItems.push(item);
                }
            });
            if (this.pageSize && !normalizedItems.some(function (item) { return item.value === _this.pageSize; })) {
                normalizedItems = [{ text: this.pageSize.toString(), value: this.pageSize }].concat(normalizedItems);
            }
            this._pageSizes = normalizedItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagerPageSizesComponent.prototype, "classes", {
        /**
         * @hidden
         *
         * @readonly
         */
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    PagerPageSizesComponent.prototype.ngAfterViewInit = function () {
        this.dropDownList.wrapper.nativeElement.setAttribute('aria-label', this.textFor('itemsPerPage'));
    };
    /**
     * @hidden
     */
    PagerPageSizesComponent.prototype.pageSizeChange = function (value, dropdownlist) {
        var event = new pagesizechange_event_1.PageSizeChangeEvent(value);
        this.pagerContext.changePageSize(event);
        if (event.isDefaultPrevented()) {
            dropdownlist.writeValue(this.pageSize);
        }
    };
    PagerPageSizesComponent.prototype.onChanges = function (_a) {
        var total = _a.total, skip = _a.skip, pageSize = _a.pageSize;
        this.total = total;
        this.skip = skip;
        this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;
        this.cd.markForCheck();
    };
    tslib_1.__decorate([
        core_1.ViewChild('dropdownlist', { static: true }),
        tslib_1.__metadata("design:type", kendo_angular_dropdowns_1.DropDownListComponent)
    ], PagerPageSizesComponent.prototype, "dropDownList", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], PagerPageSizesComponent.prototype, "pageSizes", null);
    tslib_1.__decorate([
        core_1.HostBinding("class.k-pager-sizes"),
        core_1.HostBinding("class.k-label"),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], PagerPageSizesComponent.prototype, "classes", null);
    PagerPageSizesComponent = tslib_1.__decorate([
        core_1.Component({
            changeDetection: core_1.ChangeDetectionStrategy.OnPush,
            selector: 'kendo-datapager-page-sizes',
            template: "\n        <kendo-dropdownlist\n            #dropdownlist\n            [data]=\"pageSizes\"\n            textField=\"text\"\n            valueField=\"value\"\n            [valuePrimitive]=\"true\"\n            [value]=\"pageSize\"\n            (valueChange)=\"pageSizeChange($event, dropdownlist)\"></kendo-dropdownlist>\n        {{ textFor('itemsPerPage') }}\n    "
        }),
        tslib_1.__metadata("design:paramtypes", [kendo_angular_l10n_1.LocalizationService,
            core_1.ChangeDetectorRef,
            pager_context_service_1.PagerContextService])
    ], PagerPageSizesComponent);
    return PagerPageSizesComponent;
}(pager_element_component_1.PagerElementComponent));
exports.PagerPageSizesComponent = PagerPageSizesComponent;
