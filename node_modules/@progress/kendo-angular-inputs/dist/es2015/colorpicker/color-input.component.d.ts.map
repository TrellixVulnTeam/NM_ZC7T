{"version":3,"file":"color-input.component.d.ts","sources":["color-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnChanges, SimpleChanges, EventEmitter, ElementRef, AfterViewInit, Renderer2 } from '@angular/core';\nimport { RGBA } from './models';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { NumericTextBoxComponent } from './../numerictextbox/numerictextbox.component';\n/**\n * @hidden\n */\nexport declare class ColorInputComponent implements AfterViewInit, OnChanges {\n    private host;\n    private renderer;\n    private localizationService;\n    /**\n     * The id of the hex input.\n     */\n    focusableId: string;\n    /**\n     * The color format view.\n     */\n    formatView: string;\n    /**\n     * The color value that will be parsed and populate the hex & rgba inputs.\n     * Required input property.\n     */\n    value: string;\n    /**\n     * Sets whether the alpha slider will be shown.\n     */\n    opacity: boolean;\n    /**\n     * Sets the disabled state of the ColorInput.\n     */\n    disabled: boolean;\n    /**\n     * Sets the read-only state of the ColorInput.\n     */\n    readonly: boolean;\n    /**\n     * Emits a parsed rgba string color.\n     */\n    valueChange: EventEmitter<string>;\n    colorInputClass: boolean;\n    opacityInput: NumericTextBoxComponent;\n    hexInput: ElementRef;\n    blueInput: ElementRef;\n    toggleFormatButton: ElementRef;\n    /**\n     * The rgba inputs values.\n     */\n    rgba: RGBA;\n    hex: string;\n    /**\n     * Indicates whether any of the inputs are focused.\n     */\n    private readonly isFocused;\n    /**\n     * Indicates whether any of the rgba inputs have value.\n     */\n    private readonly rgbaInputValid;\n    private subscriptions;\n    constructor(host: ElementRef, renderer: Renderer2, localizationService: LocalizationService);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    readonly formatButtonTitle: string;\n    handleRgbaValueChange(): void;\n    handleHexValueChange(hex: string): void;\n    handleRgbaInputBlur(): void;\n    handleHexInputBlur(): void;\n    private toggleFormatView;\n    private initDomEvents;\n}\n"]}