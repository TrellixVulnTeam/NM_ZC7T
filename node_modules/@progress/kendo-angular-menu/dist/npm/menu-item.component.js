/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var item_template_directive_1 = require("./templates/item-template.directive");
var item_link_template_directive_1 = require("./templates/item-link-template.directive");
var item_content_template_directive_1 = require("./templates/item-content-template.directive");
/**
 * A component that can be used to specify the Menu items
 * ([more information and examples]({% slug items_menu %})).
 *
 * @example
 * ```ts-preview
 *
 * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-menu>
 *          <kendo-menu-item text="item1">
 *              <kendo-menu-item text="item1.1" url="https://example.com">
 *              </kendo-menu-item>
 *              <kendo-menu-item text="item1.2" [disabled]="true">
 *              </kendo-menu-item>
 *          </kendo-menu-item>
 *          <kendo-menu-item text="item2">
 *              <ng-template kendoMenuItemContentTemplate let-item="item">
 *                  <div style="padding: 10px;">
 *                      My Content Template: {{ item.text }}
 *                  </div>
 *              </ng-template>
 *              <ng-template kendoMenuItemTemplate let-item="item">
 *                  <div style="padding: 10px;">
 *                      My Template: {{ item.text }}
 *                  </div>
 *              </ng-template>
 *          </kendo-menu-item>
 *          <kendo-menu-item text="item3">
 *              <ng-template kendoMenuItemLinkTemplate let-item="item" let-index="index">
 *                  <span [kendoMenuItemLink]="index">
 *                      {{ item.text }}
 *                      <span *ngIf="item.items && item.items.length" [kendoMenuExpandArrow]="index"></span>
 *                  </span>
 *              </ng-template>
 *          </kendo-menu-item>
 *        </kendo-menu>
 *    `
 * })
 *
 * class AppComponent {
 * }
 * ```
 */
var MenuItemComponent = /** @class */ (function () {
    function MenuItemComponent() {
    }
    MenuItemComponent_1 = MenuItemComponent;
    Object.defineProperty(MenuItemComponent.prototype, "template", {
        /**
         * @hidden
         */
        get: function () {
            if (this.itemTemplate && this.itemTemplate.length) {
                return this.itemTemplate.first.templateRef;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuItemComponent.prototype, "linkTemplate", {
        /**
         * @hidden
         */
        get: function () {
            if (this.itemLinkTemplate && this.itemLinkTemplate.length) {
                return this.itemLinkTemplate.first.templateRef;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuItemComponent.prototype, "contentTemplate", {
        /**
         * @hidden
         */
        get: function () {
            if (this.itemContentTemplate && this.itemContentTemplate.length) {
                return this.itemContentTemplate.first.templateRef;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuItemComponent.prototype, "items", {
        /**
         * @hidden
         */
        get: function () {
            var _this = this;
            if (this.children.length) {
                return this.children.toArray().filter(function (c) { return c !== _this; });
            }
        },
        enumerable: true,
        configurable: true
    });
    var MenuItemComponent_1;
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], MenuItemComponent.prototype, "text", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], MenuItemComponent.prototype, "url", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], MenuItemComponent.prototype, "disabled", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], MenuItemComponent.prototype, "cssClass", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], MenuItemComponent.prototype, "cssStyle", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], MenuItemComponent.prototype, "icon", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], MenuItemComponent.prototype, "data", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], MenuItemComponent.prototype, "separator", void 0);
    tslib_1.__decorate([
        core_1.ContentChildren(item_template_directive_1.ItemTemplateDirective),
        tslib_1.__metadata("design:type", core_1.QueryList)
    ], MenuItemComponent.prototype, "itemTemplate", void 0);
    tslib_1.__decorate([
        core_1.ContentChildren(item_link_template_directive_1.ItemLinkTemplateDirective),
        tslib_1.__metadata("design:type", core_1.QueryList)
    ], MenuItemComponent.prototype, "itemLinkTemplate", void 0);
    tslib_1.__decorate([
        core_1.ContentChildren(item_content_template_directive_1.ItemContentTemplateDirective),
        tslib_1.__metadata("design:type", core_1.QueryList)
    ], MenuItemComponent.prototype, "itemContentTemplate", void 0);
    tslib_1.__decorate([
        core_1.ContentChildren(MenuItemComponent_1),
        tslib_1.__metadata("design:type", core_1.QueryList)
    ], MenuItemComponent.prototype, "children", void 0);
    MenuItemComponent = MenuItemComponent_1 = tslib_1.__decorate([
        core_1.Component({
            selector: 'kendo-menu-item',
            template: ""
        })
    ], MenuItemComponent);
    return MenuItemComponent;
}());
exports.MenuItemComponent = MenuItemComponent;
