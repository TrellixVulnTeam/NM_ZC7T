/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var menu_base_1 = require("../menu-base");
var binding_directive_base_1 = require("./binding-directive-base");
var utils_1 = require("./utils");
/* tslint:disable:no-input-rename */
/**
 * A directive that converts the provided flat data to [MenuItems]({% slug api_menu_menuitem %}) and binds them to the Menu.
 */
var FlatBindingDirective = /** @class */ (function (_super) {
    tslib_1.__extends(FlatBindingDirective, _super);
    function FlatBindingDirective(menu) {
        return _super.call(this, menu) || this;
    }
    FlatBindingDirective.prototype.mapItems = function (items) {
        var _this = this;
        if (!this.idField || !this.parentIdField) {
            return items.map(function (item) { return _this.createItem(item); });
        }
        var result = [];
        var map = {};
        for (var idx = 0; idx < items.length; idx++) {
            var item = items[idx];
            var menuItem = this.createItem(item);
            var id = utils_1.getter(this.idField)(item);
            var parentId = utils_1.getter(this.parentIdField)(item);
            if (parentId === null || parentId === undefined) {
                result.push(menuItem);
            }
            else {
                var parent_1 = map[parentId] = map[parentId] || {};
                parent_1.items = parent_1.items || [];
                parent_1.items.push(menuItem);
            }
            if (map[id]) {
                menuItem.items = map[id].items;
            }
            map[id] = menuItem;
        }
        return result;
    };
    FlatBindingDirective.prototype.createItem = function (dataItem) {
        var result = { data: dataItem };
        var fields = this.fields;
        for (var idx = 0; idx < fields.length; idx++) {
            var _a = fields[idx], source = _a.source, target = _a.target;
            result[target] = utils_1.getter(source)(dataItem);
        }
        return result;
    };
    tslib_1.__decorate([
        core_1.Input("kendoMenuFlatBinding"),
        tslib_1.__metadata("design:type", Array)
    ], FlatBindingDirective.prototype, "data", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "textField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "urlField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], FlatBindingDirective.prototype, "iconField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "disabledField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "cssClassField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "cssStyleField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "separatorField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "idField", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], FlatBindingDirective.prototype, "parentIdField", void 0);
    FlatBindingDirective = tslib_1.__decorate([
        core_1.Directive({
            exportAs: 'kendoMenuFlatBinding',
            selector: '[kendoMenuFlatBinding]'
        }),
        tslib_1.__metadata("design:paramtypes", [menu_base_1.MenuBase])
    ], FlatBindingDirective);
    return FlatBindingDirective;
}(binding_directive_base_1.BindingDirectiveBase));
exports.FlatBindingDirective = FlatBindingDirective;
