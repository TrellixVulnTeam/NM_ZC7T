/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var context_menu_target_service_1 = require("./context-menu-target.service");
/**
 * @hidden
 */
exports.TARGET_CLASS = 'k-contextmenu-target';
/**
 * Specifies a [target]({% slug api_menu_contextmenutargetdirective %}) for the ContextMenu
 * ([see example]({% slug target_contextmenu %}#toc-directives)).
 */
var ContextMenuTargetDirective = /** @class */ (function () {
    function ContextMenuTargetDirective(elementRef, targetService) {
        this.targetService = targetService;
        /**
         * @hidden
         */
        this.hostClass = true;
        if (elementRef) {
            this.element = elementRef.nativeElement;
        }
        targetService.add(this);
    }
    ContextMenuTargetDirective.prototype.ngOnDestroy = function () {
        this.targetService.remove(this);
    };
    tslib_1.__decorate([
        core_1.Input('kendoContextMenuTarget'),
        tslib_1.__metadata("design:type", Object)
    ], ContextMenuTargetDirective.prototype, "data", void 0);
    tslib_1.__decorate([
        core_1.HostBinding("class." + exports.TARGET_CLASS),
        tslib_1.__metadata("design:type", Boolean)
    ], ContextMenuTargetDirective.prototype, "hostClass", void 0);
    ContextMenuTargetDirective = tslib_1.__decorate([
        core_1.Directive({
            selector: '[kendoContextMenuTarget]',
            exportAs: 'kendoContextMenuTarget'
        }),
        tslib_1.__metadata("design:paramtypes", [core_1.ElementRef, context_menu_target_service_1.ContextMenuTargetService])
    ], ContextMenuTargetDirective);
    return ContextMenuTargetDirective;
}());
exports.ContextMenuTargetDirective = ContextMenuTargetDirective;
