/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
var MenuItemComponent_1;
import { Component, Input, ContentChildren, QueryList } from '@angular/core';
import { ItemTemplateDirective } from './templates/item-template.directive';
import { ItemLinkTemplateDirective } from './templates/item-link-template.directive';
import { ItemContentTemplateDirective } from './templates/item-content-template.directive';
/**
 * A component that can be used to specify the Menu items
 * ([more information and examples]({% slug items_menu %})).
 *
 * @example
 * ```ts-preview
 *
 * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-menu>
 *          <kendo-menu-item text="item1">
 *              <kendo-menu-item text="item1.1" url="https://example.com">
 *              </kendo-menu-item>
 *              <kendo-menu-item text="item1.2" [disabled]="true">
 *              </kendo-menu-item>
 *          </kendo-menu-item>
 *          <kendo-menu-item text="item2">
 *              <ng-template kendoMenuItemContentTemplate let-item="item">
 *                  <div style="padding: 10px;">
 *                      My Content Template: {{ item.text }}
 *                  </div>
 *              </ng-template>
 *              <ng-template kendoMenuItemTemplate let-item="item">
 *                  <div style="padding: 10px;">
 *                      My Template: {{ item.text }}
 *                  </div>
 *              </ng-template>
 *          </kendo-menu-item>
 *          <kendo-menu-item text="item3">
 *              <ng-template kendoMenuItemLinkTemplate let-item="item" let-index="index">
 *                  <span [kendoMenuItemLink]="index">
 *                      {{ item.text }}
 *                      <span *ngIf="item.items && item.items.length" [kendoMenuExpandArrow]="index"></span>
 *                  </span>
 *              </ng-template>
 *          </kendo-menu-item>
 *        </kendo-menu>
 *    `
 * })
 *
 * class AppComponent {
 * }
 * ```
 */
let MenuItemComponent = MenuItemComponent_1 = class MenuItemComponent {
    /**
     * @hidden
     */
    get template() {
        if (this.itemTemplate && this.itemTemplate.length) {
            return this.itemTemplate.first.templateRef;
        }
    }
    /**
     * @hidden
     */
    get linkTemplate() {
        if (this.itemLinkTemplate && this.itemLinkTemplate.length) {
            return this.itemLinkTemplate.first.templateRef;
        }
    }
    /**
     * @hidden
     */
    get contentTemplate() {
        if (this.itemContentTemplate && this.itemContentTemplate.length) {
            return this.itemContentTemplate.first.templateRef;
        }
    }
    /**
     * @hidden
     */
    get items() {
        if (this.children.length) {
            return this.children.toArray().filter(c => c !== this);
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], MenuItemComponent.prototype, "text", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], MenuItemComponent.prototype, "url", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], MenuItemComponent.prototype, "disabled", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], MenuItemComponent.prototype, "cssClass", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], MenuItemComponent.prototype, "cssStyle", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], MenuItemComponent.prototype, "icon", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], MenuItemComponent.prototype, "data", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], MenuItemComponent.prototype, "separator", void 0);
tslib_1.__decorate([
    ContentChildren(ItemTemplateDirective),
    tslib_1.__metadata("design:type", QueryList)
], MenuItemComponent.prototype, "itemTemplate", void 0);
tslib_1.__decorate([
    ContentChildren(ItemLinkTemplateDirective),
    tslib_1.__metadata("design:type", QueryList)
], MenuItemComponent.prototype, "itemLinkTemplate", void 0);
tslib_1.__decorate([
    ContentChildren(ItemContentTemplateDirective),
    tslib_1.__metadata("design:type", QueryList)
], MenuItemComponent.prototype, "itemContentTemplate", void 0);
tslib_1.__decorate([
    ContentChildren(MenuItemComponent_1),
    tslib_1.__metadata("design:type", QueryList)
], MenuItemComponent.prototype, "children", void 0);
MenuItemComponent = MenuItemComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'kendo-menu-item',
        template: ``
    })
], MenuItemComponent);
export { MenuItemComponent };
