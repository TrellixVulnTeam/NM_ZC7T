{"version":3,"file":"anchor.directive.d.ts","sources":["anchor.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ElementRef, NgZone, Renderer2 } from \"@angular/core\";\nimport { PopupService } from \"@progress/kendo-angular-popup\";\nimport { PopoverDirectivesBase } from \"./directives-base\";\nimport { PopoverService } from \"./popover.service\";\n/**\n * Represents the [`kendoPopoverAnchor`]({% slug configuration_popover %}#toc-anchordirective) directive.\n * It is used to target an element, which should display a popover on interaction.\n *\n * @example\n * ```ts-no-run\n * <button kendoPopoverAnchor [popover]=\"myPopover\">Show Popover</button>\n * ```\n */\nexport declare class PopoverAnchorDirective extends PopoverDirectivesBase {\n    protected hostEl: ElementRef;\n    protected ngZone: NgZone;\n    protected popupService: PopupService;\n    protected renderer: Renderer2;\n    protected popoverService: PopoverService;\n    constructor(hostEl: ElementRef, ngZone: NgZone, popupService: PopupService, renderer: Renderer2, popoverService: PopoverService);\n    /**\n     * Shows the Popover. [See example]({% slug programmaticcontrol_popover %})\n     */\n    show(): void;\n    /**\n     * Toggles the visibility of the Popover. [See example]({% slug programmaticcontrol_popover %})\n     */\n    toggle(): void;\n    protected subscribeToEvents(arr: any[]): void;\n    protected subscribeClick(): void;\n    protected mouseenterHandler: () => void;\n    protected mouseleaveHandler: () => void;\n    protected focusHandler: () => void;\n    protected blurHandler: (args: any) => void;\n    /**\n     * @hidden\n     */\n    private onClick;\n    private controlVisibility;\n}\n"]}