import { Component, HostListener } from '@angular/core';
import { SfMenuService } from '@safe-fleet/sf-menu';
import { debounceTime } from 'rxjs/operators';
import { SfSecurityMenuService } from './services/sf-security-menu/sf-security-menu.service';
export class SfSecurityMenuComponent {
    constructor(sfSecMenuService, sfMenuService) {
        this.sfSecMenuService = sfSecMenuService;
        this.sfMenuService = sfMenuService;
        this.highlightClass = 'highlight-org-menu';
        this.paddingWidth = 10;
        this.popupAlign = { horizontal: 'left', vertical: 'center' };
        this.delayTime = 300;
        this.offsetPopup = { left: -1000, top: 0 };
        this.showOrganizationMsgPopup = false;
    }
    ngOnInit() {
        this.sfSecMenuService.infoMessageVisibilityChange.subscribe((showInfoMessage) => {
            if (showInfoMessage) {
                this.unauthorizedPopup = this.sfSecMenuService.unauthorizedPopup;
                this.onMenuCollapseOrExpand();
            }
            else {
                this.closeShowOrganizationMsgPopup();
            }
        });
    }
    onMenuCollapseOrExpand() {
        this.showOrganizationMsgPopup = true;
        this.sfMenuService.menuCollapse$.pipe(debounceTime(this.delayTime)).subscribe(() => {
            this.getOrganizationPosition();
        });
    }
    onResize() {
        this.getOrganizationPosition();
    }
    getOrganizationPosition() {
        if (this.showOrganizationMsgPopup) {
            const elem = document.querySelector('.sf-fleet-list');
            this.organizationItemMenu = elem && elem.parentElement ? elem.parentElement : null;
            if (this.organizationItemMenu) {
                const bounding = this.organizationItemMenu.getBoundingClientRect();
                const top = bounding.top + bounding.height / 2;
                const left = bounding.left + bounding.width + this.paddingWidth;
                this.offsetPopup = { left, top };
                this.organizationItemMenu.classList.add(this.highlightClass);
            }
            else {
                this.showOrganizationMsgPopup = false;
            }
        }
    }
    closeShowOrganizationMsgPopup() {
        this.showOrganizationMsgPopup = false;
        if (this.organizationItemMenu) {
            this.organizationItemMenu.classList.remove(this.highlightClass);
        }
    }
}
SfSecurityMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'sf-security-menu',
                template: "<sf-menu>\n  <ng-content></ng-content>\n</sf-menu>\n\n<kendo-popup [popupAlign]=\"popupAlign\" *ngIf=\"unauthorizedPopup && showOrganizationMsgPopup\" [offset]=\"offsetPopup\">\n  <div class=\"content-popup\">\n    <div class=\"message\">{{unauthorizedPopup.popupMessageText}}</div>\n    <div class=\"message action-bold\">{{unauthorizedPopup.popupMessageActionText}}</div>\n    <div>\n      <button type=\"button\" class=\"primary-size\" [primary]=\"true\" kendoButton (click)=\"closeShowOrganizationMsgPopup()\">\n        {{unauthorizedPopup.popupButtonText}}\n      </button>\n    </div>\n  </div>\n</kendo-popup>\n",
                styles: [":host{width:100%;height:100%}:host ::ng-deep .highlight-org-menu{background-color:#00000080}:host ::ng-deep .k-popup{border-radius:5px}:host ::ng-deep .k-popup .content-popup{width:210px;padding:25px 15px;text-align:center;background-color:var(--clr-gray-500);color:#fff;border-radius:5px}:host ::ng-deep .k-popup .content-popup .message{margin:10px}:host ::ng-deep .k-popup .content-popup .action-bold{font-weight:600}:host ::ng-deep .k-popup .content-popup:before{content:\"\";position:absolute;top:75px;left:-38px;border-left:10px solid transparent;border-right:10px solid var(--clr-gray-500);border-bottom:10px solid transparent;border-top:10px solid transparent;width:20px}\n"]
            },] }
];
SfSecurityMenuComponent.ctorParameters = () => [
    { type: SfSecurityMenuService },
    { type: SfMenuService }
];
SfSecurityMenuComponent.propDecorators = {
    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Ytc2VjdXJpdHktbWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zZi1zZWN1cml0eS1tZW51L3NyYy9saWIvc2Ytc2VjdXJpdHktbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQU83RixNQUFNLE9BQU8sdUJBQXVCO0lBU2xDLFlBQW9CLGdCQUF1QyxFQUFVLGFBQTRCO1FBQTdFLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBdUI7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQVJoRixtQkFBYyxHQUFHLG9CQUFvQixDQUFDO1FBQ3RDLGlCQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ25DLGVBQVUsR0FBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxDQUFDO1FBQy9ELGNBQVMsR0FBRyxHQUFHLENBQUM7UUFDaEIsZ0JBQVcsR0FBVyxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDOUMsNkJBQXdCLEdBQUcsS0FBSyxDQUFDO0lBR21FLENBQUM7SUFFckcsUUFBUTtRQUNOLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQywyQkFBMkIsQ0FBQyxTQUFTLENBQUMsQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUM5RSxJQUFJLGVBQWUsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQztnQkFDakUsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7YUFDL0I7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLDZCQUE2QixFQUFFLENBQUM7YUFDdEM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxzQkFBc0I7UUFDcEIsSUFBSSxDQUFDLHdCQUF3QixHQUFHLElBQUksQ0FBQztRQUNyQyxJQUFJLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDakYsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBR0QsUUFBUTtRQUNOLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCx1QkFBdUI7UUFDckIsSUFBSSxJQUFJLENBQUMsd0JBQXdCLEVBQUU7WUFDakMsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQ3RELElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ25GLElBQUksSUFBSSxDQUFDLG9CQUFvQixFQUFFO2dCQUM3QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMscUJBQXFCLEVBQUUsQ0FBQztnQkFDbkUsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDL0MsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7Z0JBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUM7Z0JBQ2pDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQzthQUM5RDtpQkFBTTtnQkFDTCxJQUFJLENBQUMsd0JBQXdCLEdBQUcsS0FBSyxDQUFDO2FBQ3ZDO1NBQ0Y7SUFDSCxDQUFDO0lBRUQsNkJBQTZCO1FBQzNCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxLQUFLLENBQUM7UUFDdEMsSUFBSSxJQUFJLENBQUMsb0JBQW9CLEVBQUU7WUFDN0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1NBQ2pFO0lBQ0gsQ0FBQzs7O1lBNURGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixzbkJBQWdEOzthQUVqRDs7O1lBTlEscUJBQXFCO1lBRnJCLGFBQWE7Ozt1QkFzQ25CLFlBQVksU0FBQyxlQUFlLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RMaXN0ZW5lciwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbGlnbiwgT2Zmc2V0IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItcG9wdXAnO1xuaW1wb3J0IHsgU2ZNZW51U2VydmljZSB9IGZyb20gJ0BzYWZlLWZsZWV0L3NmLW1lbnUnO1xuaW1wb3J0IHsgZGVib3VuY2VUaW1lIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU2ZTZWN1cml0eU1lbnVTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zZi1zZWN1cml0eS1tZW51L3NmLXNlY3VyaXR5LW1lbnUuc2VydmljZSc7XG5pbXBvcnQgeyBJVW5hdXRob3JpemVkUG9wdXAgfSBmcm9tICcuL2ludGVyZmFjZXMvSU1lbnVDb25maWcnO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2Ytc2VjdXJpdHktbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZi1zZWN1cml0eS1tZW51LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc2Ytc2VjdXJpdHktbWVudS5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBTZlNlY3VyaXR5TWVudUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgaGlnaGxpZ2h0Q2xhc3MgPSAnaGlnaGxpZ2h0LW9yZy1tZW51JztcbiAgcHJpdmF0ZSByZWFkb25seSBwYWRkaW5nV2lkdGggPSAxMDtcbiAgcG9wdXBBbGlnbjogQWxpZ24gPSB7IGhvcml6b250YWw6ICdsZWZ0JywgdmVydGljYWw6ICdjZW50ZXInIH07XG4gIGRlbGF5VGltZSA9IDMwMDtcbiAgb2Zmc2V0UG9wdXA6IE9mZnNldCA9IHsgbGVmdDogLTEwMDAsIHRvcDogMCB9O1xuICBzaG93T3JnYW5pemF0aW9uTXNnUG9wdXAgPSBmYWxzZTtcbiAgb3JnYW5pemF0aW9uSXRlbU1lbnU6IEhUTUxFbGVtZW50O1xuICB1bmF1dGhvcml6ZWRQb3B1cDogSVVuYXV0aG9yaXplZFBvcHVwO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNmU2VjTWVudVNlcnZpY2U6IFNmU2VjdXJpdHlNZW51U2VydmljZSwgcHJpdmF0ZSBzZk1lbnVTZXJ2aWNlOiBTZk1lbnVTZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2ZTZWNNZW51U2VydmljZS5pbmZvTWVzc2FnZVZpc2liaWxpdHlDaGFuZ2Uuc3Vic2NyaWJlKChzaG93SW5mb01lc3NhZ2UpID0+IHtcbiAgICAgIGlmIChzaG93SW5mb01lc3NhZ2UpIHtcbiAgICAgICAgdGhpcy51bmF1dGhvcml6ZWRQb3B1cCA9IHRoaXMuc2ZTZWNNZW51U2VydmljZS51bmF1dGhvcml6ZWRQb3B1cDtcbiAgICAgICAgdGhpcy5vbk1lbnVDb2xsYXBzZU9yRXhwYW5kKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNsb3NlU2hvd09yZ2FuaXphdGlvbk1zZ1BvcHVwKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBvbk1lbnVDb2xsYXBzZU9yRXhwYW5kKCkge1xuICAgIHRoaXMuc2hvd09yZ2FuaXphdGlvbk1zZ1BvcHVwID0gdHJ1ZTtcbiAgICB0aGlzLnNmTWVudVNlcnZpY2UubWVudUNvbGxhcHNlJC5waXBlKGRlYm91bmNlVGltZSh0aGlzLmRlbGF5VGltZSkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLmdldE9yZ2FuaXphdGlvblBvc2l0aW9uKCk7XG4gICAgfSk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6cmVzaXplJywgWyckZXZlbnQnXSlcbiAgb25SZXNpemUoKSB7XG4gICAgdGhpcy5nZXRPcmdhbml6YXRpb25Qb3NpdGlvbigpO1xuICB9XG5cbiAgZ2V0T3JnYW5pemF0aW9uUG9zaXRpb24oKSB7XG4gICAgaWYgKHRoaXMuc2hvd09yZ2FuaXphdGlvbk1zZ1BvcHVwKSB7XG4gICAgICBjb25zdCBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNmLWZsZWV0LWxpc3QnKTtcbiAgICAgIHRoaXMub3JnYW5pemF0aW9uSXRlbU1lbnUgPSBlbGVtICYmIGVsZW0ucGFyZW50RWxlbWVudCA/IGVsZW0ucGFyZW50RWxlbWVudCA6IG51bGw7XG4gICAgICBpZiAodGhpcy5vcmdhbml6YXRpb25JdGVtTWVudSkge1xuICAgICAgICBjb25zdCBib3VuZGluZyA9IHRoaXMub3JnYW5pemF0aW9uSXRlbU1lbnUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnN0IHRvcCA9IGJvdW5kaW5nLnRvcCArIGJvdW5kaW5nLmhlaWdodCAvIDI7XG4gICAgICAgIGNvbnN0IGxlZnQgPSBib3VuZGluZy5sZWZ0ICsgYm91bmRpbmcud2lkdGggKyB0aGlzLnBhZGRpbmdXaWR0aDtcbiAgICAgICAgdGhpcy5vZmZzZXRQb3B1cCA9IHsgbGVmdCwgdG9wIH07XG4gICAgICAgIHRoaXMub3JnYW5pemF0aW9uSXRlbU1lbnUuY2xhc3NMaXN0LmFkZCh0aGlzLmhpZ2hsaWdodENsYXNzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc2hvd09yZ2FuaXphdGlvbk1zZ1BvcHVwID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY2xvc2VTaG93T3JnYW5pemF0aW9uTXNnUG9wdXAoKSB7XG4gICAgdGhpcy5zaG93T3JnYW5pemF0aW9uTXNnUG9wdXAgPSBmYWxzZTtcbiAgICBpZiAodGhpcy5vcmdhbml6YXRpb25JdGVtTWVudSkge1xuICAgICAgdGhpcy5vcmdhbml6YXRpb25JdGVtTWVudS5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuaGlnaGxpZ2h0Q2xhc3MpO1xuICAgIH1cbiAgfVxufVxuIl19