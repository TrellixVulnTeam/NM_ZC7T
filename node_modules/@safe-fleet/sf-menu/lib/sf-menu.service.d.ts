import { BehaviorSubject, Subject } from 'rxjs';
import { Router } from '@angular/router';
import { MenuConfig } from './models/menu-config';
import { MenuEvent } from './models/menu-events';
import { MenuItem } from './models/menu-item';
import * as ɵngcc0 from '@angular/core';
export declare class SfMenuService {
    private readonly router;
    SMALL_RESOLUTION: number;
    menuCollapse$: BehaviorSubject<boolean>;
    events$: Subject<MenuEvent>;
    menuConfig: MenuConfig;
    menuConfig$: BehaviorSubject<MenuConfig>;
    noThemeColors: {
        [key: string]: string;
    };
    themeColors: {
        [key: string]: string;
    };
    get colors(): {
        [key: string]: string;
    };
    private nodesToExpand;
    currentTheme: BehaviorSubject<string>;
    private themes;
    storedTheme: any;
    constructor(router: Router);
    setMenuConfig(cfg: MenuConfig): void;
    setBaseColors(): void;
    routeClicked(item: MenuItem, evt: MouseEvent): void;
    private setCurrentRouteActive;
    setTheme(theme?: string): void;
    private collapseAllItems;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SfMenuService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<SfMenuService>;
}

//# sourceMappingURL=sf-menu.service.d.ts.map